{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 881b815651aeda8686cb","webpack:///./src/graphics/shapes/shape.ts","webpack:///./src/utils/vector.ts","webpack:///./src/graphics/shapes/boundingRectangle.ts","webpack:///./src/graphics/shapes/midpoint.ts","webpack:///./src/graphics/rgbColor.ts","webpack:///./src/graphics/shapes/ellipse.ts","webpack:///./src/graphics/shapes/hexagon.ts","webpack:///./src/graphics/shapes/octogon.ts","webpack:///./src/graphics/shapes/rectangle.ts","webpack:///./src/graphics/shapes/triangle.ts","webpack:///./src/graphics/precision.ts","webpack:///./src/graphics/colorMapper.ts","webpack:///./src/graphics/shapes/line.ts","webpack:///./src/graphics/shapes/shapeFactory.ts","webpack:///./src/graphics/webglRenderer.ts","webpack:///./src/utils/contextWrangler.ts","webpack:///./index.ts","webpack:///./src/graphics/drawingMode.ts","webpack:///./src/graphics/renderModeMapper.ts","webpack:///./src/graphics/vertexBuffer.ts"],"names":[],"mappings":"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","file":"webgl-renderer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"webgl-renderer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webgl-renderer\"] = factory();\n\telse\n\t\troot[\"webgl-renderer\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 881b815651aeda8686cb","import { Float32Vector } from \"../../utils/vector\";\r\nimport { RGBColor } from \"../rgbColor\";\r\n\r\nexport abstract class Shape {\r\n    public verticies: Float32Vector;\r\n    public rgbColor: RGBColor;\r\n    public vertexSize: number; // number of floats to represent a vertex (i.e. x and y)\r\n    public colorSize: number; // number of floats to represent a vertex's color (i.e. r, g, and b)\r\n    public numberOfVerticies: number;\r\n    public glRenderMode: number;\r\n\r\n    constructor(rgbColor: RGBColor)\r\n    {\r\n        this.rgbColor = rgbColor;\r\n        this.vertexSize = 2;\r\n        this.colorSize = 3;\r\n    }\r\n\r\n    protected addXYAndColorToFloat32Array(array: Float32Array, index: number, x: number, y: number)\r\n    {\r\n        array[index] = x;\r\n        array[index + 1] = y;\r\n        array[index + 2] = this.rgbColor.red;\r\n        array[index + 3] = this.rgbColor.green;\r\n        array[index + 4] = this.rgbColor.blue;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shapes/shape.ts","export class Float32Vector\r\n{\r\n    public arr: Float32Array;\r\n    public size: number;\r\n\r\n    constructor(arr: Float32Array)\r\n    {\r\n        this.arr = arr;\r\n        this.size = arr.length;\r\n    }\r\n\r\n    public addNumber(number: number)\r\n    {\r\n        const newSize = this.size + 1;\r\n        if (newSize >= this.arr.length)\r\n        {\r\n            let oldArr = this.arr;\r\n            this.arr = new Float32Array(newSize * 2);\r\n            this.arr.set(oldArr);\r\n        }\r\n        this.arr[this.size] = number;\r\n        this.size = newSize;\r\n    }\r\n\r\n    public addArray(arr: Float32Array | Array<number>)\r\n    {\r\n        let newSize = this.size + arr.length;\r\n        if (newSize >= this.arr.length)\r\n        {\r\n            let oldArr = this.arr;\r\n            this.arr = new Float32Array(newSize * 2);\r\n            this.arr.set(oldArr);\r\n        }\r\n        this.arr.set(arr, this.size);\r\n        this.size = newSize;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/vector.ts","import { Point2d } from \"./point2d\";\r\n\r\nexport class BoundingRectangle\r\n{\r\n    public topLeft: Point2d;\r\n    public topRight: Point2d;\r\n    public bottomRight: Point2d;\r\n    public bottomLeft: Point2d;\r\n\r\n    constructor(point1: Point2d, point2: Point2d)\r\n    {\r\n        if (this.isTopLeftBottomRight(point1, point2))\r\n        {\r\n            this.topLeft = point1;\r\n            this.topRight = {x: point2.x, y: point1.y};\r\n            this.bottomRight = point2;\r\n            this.bottomLeft = {x: point1.x, y: point2.y};\r\n        }\r\n        else if (this.isBottomRightTopLeft(point1, point2))\r\n        {\r\n            this.topLeft = point2;\r\n            this.topRight = {x: point1.x, y: point2.y};\r\n            this.bottomRight = point1;\r\n            this.bottomLeft = {x: point2.x, y: point1.y};\r\n        }\r\n        else if (this.isBottomLeftTopRight(point1, point2))\r\n        {\r\n            this.topLeft =  {x: point1.x, y: point2.y};\r\n            this.topRight = point2;\r\n            this.bottomRight = {x: point2.x, y: point1.y};\r\n            this.bottomLeft = point1;\r\n        }\r\n        else// only isTopRightBottomLeft possible, no need to test for it\r\n        {\r\n            this.topLeft =  {x: point2.x, y: point1.y};\r\n            this.topRight = point1;\r\n            this.bottomRight = {x: point1.x, y: point2.y};\r\n            this.bottomLeft = point2;\r\n        }\r\n    }\r\n\r\n    // four possible pattterns for bounding rectangles based off of two points\r\n    // returns whether or not point1 is topLeft and point2 is bottomRight\r\n    private isTopLeftBottomRight(point1: Point2d, point2: Point2d): boolean\r\n    {\r\n        return point1.x <= point2.x && point1.y >= point2.y;\r\n    }\r\n\r\n    // returns whether or not point1 is bottomRight and point2 is topLeft\r\n    private isBottomRightTopLeft(point1: Point2d, point2: Point2d): boolean\r\n    {\r\n        return point1.x >= point2.x && point1.y <= point2.y;\r\n    }\r\n\r\n    // returns whether or not point1 is bottomLeft and point2 is topRight\r\n    private isBottomLeftTopRight(point1: Point2d, point2: Point2d): boolean\r\n    {\r\n        return point1.x <= point2.x && point1.y <= point2.y;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shapes/boundingRectangle.ts","import { Point2d } from \"./point2d\";\r\nimport { Tuple } from \"../../utils/tuple\";\r\n\r\nexport class Midpoint\r\n{\r\n    public static between(point1: Point2d, point2: Point2d): Point2d\r\n    {\r\n        let midX = (point1.x + point2.x) / 2;\r\n        let midY = (point1.y + point2.y) / 2;\r\n        return {x: midX, y: midY};\r\n    }\r\n}\r\n\r\nexport class ThirdPoints\r\n{\r\n    public static between(point1: Point2d, point2: Point2d): Tuple<Point2d, Point2d>\r\n    {\r\n        let largerX = Math.max(point1.x, point2.x);\r\n        let smallerX = Math.min(point1.x, point2.x);\r\n        let largerY = Math.max(point1.y, point2.y);\r\n        let smallerY = Math.min(point1.y, point2.y);\r\n        let thirdX = (largerX - smallerX) / 3;\r\n        let thirdY = (largerY - smallerY) / 3;\r\n        let firstThird = {x: smallerX + thirdX, y: smallerY + thirdY};\r\n        let secondThird = {x: firstThird.x + thirdX, y: firstThird.y + thirdY};\r\n        return { first: firstThird, second: secondThird };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shapes/midpoint.ts","export class RGBColor\r\n{\r\n    public red: number;\r\n    public green: number;\r\n    public blue: number;\r\n\r\n    constructor(red: number, green: number, blue: number)\r\n    {\r\n        this.red = red;\r\n        this.green = green;\r\n        this.blue = blue;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/rgbColor.ts","import { Shape } from \"./shape\";\r\nimport { Point2d } from \"./point2d\";\r\nimport { Float32Vector } from \"../../utils/vector\";\r\nimport { BoundingRectangle } from \"./boundingRectangle\";\r\nimport { Midpoint } from \"../../../src/graphics/shapes/midpoint\";\r\nimport { Precision } from \"../precision\";\r\nimport { RGBColor } from \"../rgbColor\";\r\n\r\nexport class Ellipse extends Shape\r\n{\r\n    private center: Point2d;\r\n    private horizontalRadius: number;\r\n    private verticalRadius: number;\r\n    private numberOfInnerVerticies;\r\n\r\n    constructor(point1: Point2d, point2: Point2d, rgbColor: RGBColor, gl: WebGLRenderingContext, precision: Precision)\r\n    {\r\n        super(rgbColor);\r\n\r\n        let boundingRect = new BoundingRectangle(point1, point2);\r\n        this.horizontalRadius = (boundingRect.topRight.x - boundingRect.topLeft.x) / 2;\r\n        this.verticalRadius = (boundingRect.topLeft.y - boundingRect.bottomLeft.y) / 2;\r\n        if (precision === Precision.High)\r\n        {\r\n            this.numberOfInnerVerticies = 400;\r\n            this.numberOfVerticies = 403;\r\n        }\r\n        else if (precision === Precision.Low)\r\n        {\r\n            this.numberOfInnerVerticies = 8;\r\n            this.numberOfVerticies = 11;\r\n        }\r\n        this.center = Midpoint.between(boundingRect.topLeft, boundingRect.bottomRight);\r\n        let vertexArray = this.populateVerticies(boundingRect);\r\n        this.verticies = new Float32Vector(vertexArray);\r\n        this.glRenderMode = gl.TRIANGLE_FAN;\r\n    }\r\n\r\n    private populateVerticies(boundingRect: BoundingRectangle): Float32Array\r\n    {\r\n        // 5x the verticies one for x, one for y, one for r, one for g, one for b\r\n        let arr = new Float32Array(this.numberOfVerticies * 5);\r\n\r\n        let x = boundingRect.topLeft.x;\r\n        // divide by 2 because of horizontal symmetry, subtract one because of duplicate vertex inserted at middle\r\n        const xIncrement = (this.horizontalRadius * 2) / ((this.numberOfVerticies - 1) / 2);\r\n\r\n        // manually insert first, middle, and last vertex\r\n        this.addXYAndColorToFloat32Array(arr, 0, x, boundingRect.topLeft.y - this.verticalRadius);\r\n        // insert at half the verticies. times 5 because each vertex takes 5 spaces (x,y,r,g, and b)\r\n        // and then add 5 since we already inserted the first vertex\r\n        let symmetryInsertionOffset = ((this.numberOfInnerVerticies / 2) * 5) + 5;\r\n        let endPointX = boundingRect.topRight.x;\r\n        let endPointY = boundingRect.topRight.y - this.verticalRadius;\r\n        this.addXYAndColorToFloat32Array(arr, symmetryInsertionOffset, endPointX, endPointY);\r\n        this.addXYAndColorToFloat32Array(arr, arr.length - 5, endPointX, endPointY);\r\n\r\n        // start at 2  because already inserted at 0 and 1 for x and y and then 2, 3, and 4 for r, g, and b\r\n        let insertionIndex = 5;\r\n\r\n        // divide by half the number of verticies because horizontal symmetry\r\n        for ( let i = 0; i < this.numberOfInnerVerticies / 2; i++)\r\n        {\r\n            x += xIncrement;\r\n            let y = this.getYDistanceFromCenterForX(x);\r\n\r\n            this.addXYAndColorToFloat32Array(arr, insertionIndex, x, y + this.center.y);\r\n            this.addXYAndColorToFloat32Array(arr, insertionIndex + symmetryInsertionOffset, x, this.center.y - y);\r\n\r\n            insertionIndex += 5;\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    private getYDistanceFromCenterForX(x: number): number\r\n    {\r\n        let verticalRadiusSquared = Math.pow(this.verticalRadius, 2);\r\n        return Math.sqrt(verticalRadiusSquared -\r\n            ((verticalRadiusSquared * Math.pow((x - this.center.x), 2)) / Math.pow(this.horizontalRadius, 2)));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shapes/ellipse.ts","import { Shape } from \"./shape\";\r\nimport { Point2d } from \"./point2d\";\r\nimport { Float32Vector } from \"../../utils/vector\";\r\nimport { BoundingRectangle } from \"./boundingRectangle\";\r\nimport { Midpoint, ThirdPoints } from \"../../../src/graphics/shapes/midpoint\";\r\nimport { RGBColor } from \"../rgbColor\";\r\n\r\nexport class Hexagon extends Shape\r\n{\r\n    constructor(point1: Point2d, point2: Point2d, rgbColor: RGBColor, gl: WebGLRenderingContext)\r\n    {\r\n        super(rgbColor);\r\n\r\n        let boundingRect = new BoundingRectangle(point1, point2);\r\n        let vertexArray = this.populateVerticies(boundingRect);\r\n        this.verticies = new Float32Vector(vertexArray);\r\n        this.numberOfVerticies = 6;\r\n        this.glRenderMode = gl.TRIANGLE_FAN;\r\n    }\r\n\r\n    private populateVerticies(boundingRect: BoundingRectangle): Float32Array\r\n    {\r\n        let arr = new Float32Array(30);\r\n\r\n        let { first, second } = ThirdPoints.between(boundingRect.topLeft, boundingRect.topRight);\r\n        this.addXYAndColorToFloat32Array(arr, 0, first.x, first.y);\r\n        this.addXYAndColorToFloat32Array(arr, 5, second.x, second.y);\r\n        let mid = Midpoint.between(boundingRect.topRight, boundingRect.bottomRight);\r\n        this.addXYAndColorToFloat32Array(arr, 10, mid.x, mid.y);\r\n        ({ first, second } = ThirdPoints.between(boundingRect.bottomRight, boundingRect.bottomLeft));\r\n        this.addXYAndColorToFloat32Array(arr, 15, second.x, second.y);\r\n        this.addXYAndColorToFloat32Array(arr, 20, first.x, first.y);\r\n        mid = Midpoint.between(boundingRect.bottomLeft, boundingRect.topLeft);\r\n        this.addXYAndColorToFloat32Array(arr, 25, mid.x, mid.y);\r\n\r\n        return arr;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shapes/hexagon.ts","import { Shape } from \"./shape\";\r\nimport { Point2d } from \"./point2d\";\r\nimport { Float32Vector } from \"../../utils/vector\";\r\nimport { BoundingRectangle } from \"./boundingRectangle\";\r\nimport { ThirdPoints } from \"../../../src/graphics/shapes/midpoint\";\r\nimport { RGBColor } from \"../rgbColor\";\r\n\r\nexport class Octogon extends Shape\r\n{\r\n    constructor(point1: Point2d, point2: Point2d, rgbColor: RGBColor, gl: WebGLRenderingContext)\r\n    {\r\n        super(rgbColor);\r\n\r\n        let boundingRect = new BoundingRectangle(point1, point2);\r\n        let vertexArray = this.populateVerticies(boundingRect);\r\n        this.verticies = new Float32Vector(vertexArray);\r\n        this.numberOfVerticies = 8;\r\n        this.glRenderMode = gl.TRIANGLE_FAN;\r\n    }\r\n\r\n    private populateVerticies(boundingRect: BoundingRectangle): Float32Array\r\n    {\r\n        let arr = new Float32Array(40);\r\n\r\n        let { first, second } = ThirdPoints.between(boundingRect.topLeft, boundingRect.topRight);\r\n        this.addXYAndColorToFloat32Array(arr, 0, first.x, first.y);\r\n        this.addXYAndColorToFloat32Array(arr, 5, second.x, second.y);\r\n        ({ first, second } = ThirdPoints.between(boundingRect.topRight, boundingRect.bottomRight));\r\n        this.addXYAndColorToFloat32Array(arr, 10, second.x, second.y);\r\n        this.addXYAndColorToFloat32Array(arr, 15, first.x, first.y);\r\n        ({ first, second } = ThirdPoints.between(boundingRect.bottomRight, boundingRect.bottomLeft));\r\n        this.addXYAndColorToFloat32Array(arr, 20, second.x, second.y);\r\n        this.addXYAndColorToFloat32Array(arr, 25, first.x, first.y);\r\n        ({ first, second } = ThirdPoints.between(boundingRect.bottomLeft, boundingRect.topLeft));\r\n        this.addXYAndColorToFloat32Array(arr, 30, first.x, first.y);\r\n        this.addXYAndColorToFloat32Array(arr, 35, second.x, second.y);\r\n\r\n        return arr;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shapes/octogon.ts","import { Shape } from \"./shape\";\r\nimport { Point2d } from \"./point2d\";\r\nimport { Float32Vector } from \"../../utils/vector\";\r\nimport { BoundingRectangle } from \"./boundingRectangle\";\r\nimport { RGBColor } from \"../rgbColor\";\r\n\r\nexport class Rectangle extends Shape\r\n{\r\n    constructor(point1: Point2d, point2: Point2d, rgbColor: RGBColor, gl: WebGLRenderingContext)\r\n    {\r\n        super(rgbColor);\r\n\r\n        const boundingRect = new BoundingRectangle(point1, point2);\r\n        let array = new Float32Array(20);\r\n        this.addXYAndColorToFloat32Array(array, 0, boundingRect.topLeft.x, boundingRect.topLeft.y);\r\n        this.addXYAndColorToFloat32Array(array, 5, boundingRect.topRight.x, boundingRect.topRight.y);\r\n        this.addXYAndColorToFloat32Array(array, 10, boundingRect.bottomLeft.x, boundingRect.bottomLeft.y);\r\n        this.addXYAndColorToFloat32Array(array, 15, boundingRect.bottomRight.x, boundingRect.bottomRight.y);\r\n        this.verticies = new Float32Vector(array);\r\n        this.numberOfVerticies = 4;\r\n        this.glRenderMode = gl.TRIANGLE_STRIP;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shapes/rectangle.ts","import { Shape } from \"./shape\";\r\nimport { Point2d } from \"./point2d\";\r\nimport { Float32Vector } from \"../../utils/vector\";\r\nimport { BoundingRectangle } from \"./boundingRectangle\";\r\nimport { Midpoint } from \"./midpoint\";\r\nimport { RGBColor } from \"../rgbColor\";\r\n\r\nexport class Triangle extends Shape\r\n{\r\n    constructor(point1: Point2d, point2: Point2d, rgbColor: RGBColor, gl: WebGLRenderingContext)\r\n    {\r\n        super(rgbColor);\r\n\r\n        const boundingRect = new BoundingRectangle(point1, point2);\r\n        let topPoint = Midpoint.between(boundingRect.topLeft, boundingRect.topRight);\r\n        let array = new Float32Array(15);\r\n        this.addXYAndColorToFloat32Array(array, 0, boundingRect.bottomLeft.x, boundingRect.bottomLeft.y);\r\n        this.addXYAndColorToFloat32Array(array, 5, topPoint.x, topPoint.y);\r\n        this.addXYAndColorToFloat32Array(array, 10, boundingRect.bottomRight.x, boundingRect.bottomRight.y);\r\n        this.verticies = new Float32Vector(array);\r\n        this.numberOfVerticies = 3;\r\n        this.glRenderMode = gl.TRIANGLES;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shapes/triangle.ts","export enum Precision\r\n{\r\n    Low,\r\n    High\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/precision.ts","import { RGBColor } from \"./rgbColor\";\r\n\r\nexport type Color = \"red\" |\r\n                    \"orange\" |\r\n                    \"yellow\" |\r\n                    \"green\" |\r\n                    \"cyan\" |\r\n                    \"blue\" |\r\n                    \"indigo\" |\r\n                    \"fuchsia\" |\r\n                    \"white\";\r\n\r\nexport class ColorMapper\r\n{\r\n    public static colorToRGBColor (color: Color): RGBColor\r\n    {\r\n        switch (color) {\r\n            case \"red\":\r\n                return new RGBColor(1.0, 0.0, 0.0);\r\n            case \"orange\":\r\n                return new RGBColor(1.0, 0.271, 0.0);\r\n            case \"yellow\":\r\n                return new RGBColor(1.0, 1.0, 0.0);\r\n            case \"green\":\r\n                return new RGBColor(0.0, 1.0, 0.0);\r\n            case \"cyan\":\r\n                return new RGBColor(0.0, 1.0, 1.0);\r\n            case \"blue\":\r\n                return new RGBColor(0.0, 0.0, 1.0);\r\n            case \"indigo\":\r\n                return new RGBColor(0.294, 0.0, 0.510);\r\n            case \"fuchsia\":\r\n                return new RGBColor(1.0, 0.0, 1.0);\r\n            case \"white\":\r\n                return new RGBColor(1.0, 1.0, 1.0);\r\n            default: throw Error(`could not find color ${color}`);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/colorMapper.ts","import { Shape } from \"./shape\";\r\nimport { Point2d } from \"./point2d\";\r\nimport { Float32Vector } from \"../../utils/vector\";\r\nimport { RGBColor } from \"../rgbColor\";\r\n\r\nexport class Line extends Shape\r\n{\r\n    constructor(point: Point2d, rgbColor: RGBColor, gl: WebGLRenderingContext)\r\n    {\r\n        super(rgbColor);\r\n\r\n        let array = new Float32Array(5);\r\n        this.addXYAndColorToFloat32Array(array, 0, point.x, point.y);\r\n        this.verticies = new Float32Vector(array);\r\n        this.numberOfVerticies = 1;\r\n        this.glRenderMode = gl.LINE_STRIP;\r\n    }\r\n\r\n    public addVertex(vertex: Point2d): void\r\n    {\r\n        let array = new Float32Array(5);\r\n        this.addXYAndColorToFloat32Array(array, 0, vertex.x, vertex.y);\r\n        this.verticies.addArray(array);\r\n        this.numberOfVerticies++;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shapes/line.ts","import { Shape } from \"./shape\";\r\nimport { ShapeMode } from \"./shapeMode\";\r\nimport { Ellipse } from \"./ellipse\";\r\nimport { Triangle } from \"./triangle\";\r\nimport { Rectangle } from \"./rectangle\";\r\nimport { Hexagon } from \"./hexagon\";\r\nimport { Octogon } from \"./octogon\";\r\nimport { Point2d } from \"./point2d\";\r\nimport { RGBColor } from \"../rgbColor\";\r\nimport { Precision } from \"../precision\";\r\n\r\nexport class ShapeFactory\r\n{\r\n    public static createShape(point1: Point2d, point2: Point2d, shapeMode: ShapeMode,\r\n        rgbColor: RGBColor, gl: WebGLRenderingContext): Shape\r\n    {\r\n        switch (shapeMode)\r\n        {\r\n            case \"ellipses\":\r\n                return this.createEllipse(point1, point2, rgbColor, gl);\r\n            case \"triangles\":\r\n                return this.createTriangle(point1, point2, rgbColor, gl);\r\n            case \"rectangles\":\r\n                return this.createRectangle(point1, point2, rgbColor, gl);\r\n            case \"hexagons\":\r\n                return this.createHexagon(point1, point2, rgbColor, gl);\r\n            case \"octogons\":\r\n                return this.createOctogon(point1, point2, rgbColor, gl);\r\n            default:\r\n                throw Error(`cannot recognize shape type ${shapeMode}`);\r\n        }\r\n    }\r\n\r\n    private static createEllipse(point1: Point2d, point2: Point2d, rgbColor: RGBColor,\r\n        gl: WebGLRenderingContext): Ellipse\r\n    {\r\n        return new Ellipse(point1, point2, rgbColor, gl, Precision.High);\r\n    }\r\n\r\n    private static createTriangle(point1: Point2d, point2: Point2d, rgbColor: RGBColor,\r\n        gl: WebGLRenderingContext): Triangle\r\n    {\r\n        return new Triangle(point1, point2, rgbColor, gl);\r\n    }\r\n\r\n    private static createRectangle(point1: Point2d, point2: Point2d, rgbColor: RGBColor,\r\n        gl: WebGLRenderingContext): Rectangle\r\n    {\r\n        return new Rectangle(point1, point2, rgbColor, gl);\r\n    };\r\n\r\n    private static createHexagon(point1: Point2d, point2: Point2d, rgbColor: RGBColor,\r\n        gl: WebGLRenderingContext): Hexagon\r\n    {\r\n        return new Hexagon(point1, point2, rgbColor, gl);\r\n        // youre\r\n        // cute baby you know its true\r\n        // love,\r\n        // - your girlfriend\r\n    }\r\n\r\n    private static createOctogon(point1: Point2d, point2: Point2d, rgbColor: RGBColor,\r\n        gl: WebGLRenderingContext): Octogon\r\n    {\r\n        return new Octogon(point1, point2, rgbColor, gl);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/shapes/shapeFactory.ts","import { Shape } from \"./shapes/shape\";\r\nimport { Float32Vector } from \"../utils/vector\";\r\nimport { RenderMode, RenderModeMapper } from \"./renderModeMapper\";\r\nimport { VertexBuffer } from \"./vertexBuffer\";\r\nimport { DrawingMode } from \"./drawingMode\";\r\nimport { ShapeMode } from \"./shapes/shapeMode\";\r\nimport { RGBColor } from \"./rgbColor\";\r\n\r\nexport interface IWebGLRenderer\r\n{\r\n    color: RGBColor;\r\n    backgroundColor: RGBColor;\r\n    gl: WebGLRenderingContext;\r\n    shape: ShapeMode;\r\n    renderMode: RenderMode;\r\n    draw: () => void;\r\n    setViewPortDimensions: (newWidth: number, newHeight: number) => void;\r\n    addXYPointToScene(x: number, y: number): void;\r\n    addShapeToScene(shape: Shape): void;\r\n    addShapesToScene(shape: Array<Shape>): void;\r\n    removeAllShapes(): void;\r\n}\r\n\r\nexport class WebGLRenderer implements IWebGLRenderer\r\n{\r\n    public gl: WebGLRenderingContext;\r\n    private _glRenderMode: number;\r\n    private _shapeMode: ShapeMode;\r\n    private _renderModeStr: RenderMode;\r\n    private _drawingMode: DrawingMode;\r\n    private _backgroundColor: RGBColor;\r\n    private _color: RGBColor;\r\n    private _pointsVector: VertexBuffer;\r\n    private _linesVector: VertexBuffer;\r\n    private _lineStripVector: VertexBuffer;\r\n    private _lineLoopVector: VertexBuffer;\r\n    private _trianglesVector: VertexBuffer;\r\n    private _triangleStripVector: VertexBuffer;\r\n    private _triangleFanVector: VertexBuffer;\r\n    private _vertexBuffers: Array<VertexBuffer>;\r\n    private _shapeScene: Array<Shape>;\r\n    private _shaderProgram: WebGLShader;\r\n    private _vertexShaderSource: string =\r\n    \"    attribute vec3 a_position;\\n\" +\r\n    \"    attribute float a_pointSize;\\n\" +\r\n    \"    attribute vec4 a_color;\\n\" +\r\n    \"    varying vec4 v_color;\\n\" +\r\n    \"    void main(void) {\\n\" +\r\n    \"        gl_Position = vec4(a_position, 1.0);\\n\" +\r\n    \"        gl_PointSize = 10.0;\\n\" +\r\n    \"        v_color = a_color;\\n\" +\r\n    \"    }\\n\";\r\n\r\n    private _fragmentShaderSource: string =\r\n    \"    precision mediump float;\\n\" +\r\n    \"    uniform vec4 u_fragColor;\" +\r\n    \"    varying vec4 v_color;\\n\" +\r\n    \"    void main(void) {\\n\" +\r\n    \"        gl_FragColor = v_color;\\n\" +\r\n    \"    }\\n\";\r\n\r\n    constructor(canvasWidth: number, canvasHeight: number, gl: WebGLRenderingContext,\r\n        backgroundColor: RGBColor = {red: 0.9, green: 0.9, blue: 0.9},\r\n        color: RGBColor = {red: 0.0, green: 0.0, blue: 0.0})\r\n    {\r\n        this.gl = gl;\r\n        this._glRenderMode = this.gl.POINTS;\r\n        this._shapeMode = \"points\";\r\n        this._drawingMode = DrawingMode.Verticies;\r\n        this._backgroundColor = backgroundColor;\r\n        this._color = color;\r\n        this.setViewPortDimensions(canvasWidth, canvasHeight);\r\n        this.initShaders();\r\n        this._pointsVector = new VertexBuffer(this.gl.POINTS, new Float32Array(0), this.gl);\r\n        this._linesVector = new VertexBuffer(this.gl.LINES, new Float32Array(0), this.gl);\r\n        this._lineStripVector = new VertexBuffer(this.gl.LINE_STRIP, new Float32Array(0), this.gl);\r\n        this._lineLoopVector = new VertexBuffer(this.gl.LINE_LOOP, new Float32Array(0), this.gl);\r\n        this._trianglesVector = new VertexBuffer(this.gl.TRIANGLES, new Float32Array(0), this.gl);\r\n        this._triangleStripVector = new VertexBuffer(this.gl.TRIANGLE_STRIP, new Float32Array(0), this.gl);\r\n        this._triangleFanVector = new VertexBuffer(this.gl.TRIANGLE_FAN, new Float32Array(0), this.gl);\r\n        this._vertexBuffers = [\r\n            this._pointsVector,\r\n            this._linesVector,\r\n            this._lineStripVector,\r\n            this._lineLoopVector,\r\n            this._trianglesVector,\r\n            this._triangleStripVector,\r\n            this._triangleFanVector];\r\n        this._shapeScene = new Array<Shape>();\r\n    }\r\n\r\n    public setViewPortDimensions(newWidth: number, newHeight: number): void\r\n    {\r\n        this.gl.viewport(0, 0, newWidth, newHeight);\r\n    }\r\n\r\n    public get renderMode(): RenderMode\r\n    {\r\n        return this._renderModeStr;\r\n    }\r\n\r\n    public set renderMode(renderMode: RenderMode)\r\n    {\r\n        this._drawingMode = DrawingMode.Verticies;\r\n        this._renderModeStr = renderMode;\r\n        this._glRenderMode = RenderModeMapper.renderModeToWebGlConstant(renderMode, this.gl);\r\n    }\r\n\r\n    public get shape(): ShapeMode\r\n    {\r\n        return this._shapeMode;\r\n    }\r\n\r\n    public set shape(newShapeMode: ShapeMode)\r\n    {\r\n        this._drawingMode = DrawingMode.Shapes;\r\n        this._shapeMode = newShapeMode;\r\n    }\r\n\r\n    public get color(): RGBColor\r\n    {\r\n        return this._color;\r\n    }\r\n\r\n    public set color(color: RGBColor)\r\n    {\r\n        this._color = color;\r\n    }\r\n\r\n    public get backgroundColor(): RGBColor\r\n    {\r\n        return this._backgroundColor;\r\n    }\r\n\r\n    public set backgroundColor(backgroundColor: RGBColor)\r\n    {\r\n        this._backgroundColor = backgroundColor;\r\n    }\r\n\r\n    public addXYPointToScene(x: number, y: number): void\r\n    {\r\n        if (this._drawingMode !== DrawingMode.Verticies) { return; }\r\n\r\n        switch (this._glRenderMode)\r\n        {\r\n            case this.gl.POINTS:\r\n                this.addXYAndColorToVertexBuffer(this._pointsVector.verticies, x, y);\r\n                break;\r\n            case this.gl.LINES:\r\n                this.addXYAndColorToVertexBuffer(this._linesVector.verticies, x, y);\r\n                break;\r\n            case this.gl.LINE_STRIP:\r\n                this.addXYAndColorToVertexBuffer(this._lineStripVector.verticies, x, y);\r\n                break;\r\n            case this.gl.LINE_LOOP:\r\n                this.addXYAndColorToVertexBuffer(this._lineLoopVector.verticies, x, y);\r\n                break;\r\n            case this.gl.TRIANGLES:\r\n                this.addXYAndColorToVertexBuffer(this._trianglesVector.verticies, x, y);\r\n                break;\r\n            case this.gl.TRIANGLE_STRIP:\r\n                this.addXYAndColorToVertexBuffer(this._triangleStripVector.verticies, x, y);\r\n                break;\r\n            case this.gl.TRIANGLE_FAN:\r\n                this.addXYAndColorToVertexBuffer(this._triangleFanVector.verticies, x, y);\r\n                break;\r\n        }\r\n    }\r\n\r\n    public addShapeToScene(shape: Shape): void\r\n    {\r\n        this._shapeScene.push(shape);\r\n    }\r\n\r\n    public addShapesToScene(shapes: Array<Shape>): void\r\n    {\r\n        Array.prototype.push.apply(this._shapeScene, shapes);\r\n    }\r\n\r\n    public removeAllShapes(): void\r\n    {\r\n        this._shapeScene = new Array<Shape>();\r\n    }\r\n\r\n\r\n    public draw()\r\n    {\r\n        this.gl.clearColor(this._backgroundColor.red, this._backgroundColor.green, this._backgroundColor.blue, 1.0);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        for (let vb of this._vertexBuffers)\r\n        {\r\n            if (vb.verticies.size > 0)\r\n            {\r\n                this.drawGlArray(vb.verticies, vb.renderMode);\r\n            }\r\n        }\r\n\r\n        if (this._shapeScene.length > 0)\r\n        {\r\n            for (let shape of this._shapeScene)\r\n            {\r\n                this.drawGlArray(shape.verticies, shape.glRenderMode, shape.vertexSize, shape.colorSize);\r\n            }\r\n        }\r\n    }\r\n\r\n    // by default vertexSize = 2 because we use two floats per vertex...only rendering 2d for now\r\n    // colorSize = 3 because we use three floats to represent R, G, and B\r\n    private drawGlArray(vector: Float32Vector, renderMode: number, vertexSize: number = 2, colorSize: number = 3): void\r\n    {\r\n        let a_position = this.gl.getAttribLocation(this._shaderProgram, \"a_position\");\r\n        let a_color = this.gl.getAttribLocation(this._shaderProgram, \"a_color\");\r\n\r\n        const floatSize = vector.arr.BYTES_PER_ELEMENT;\r\n\r\n        let vertexBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vertexBuffer);\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vector.arr, this.gl.STATIC_DRAW);\r\n        this.gl.vertexAttribPointer(a_position, vertexSize, this.gl.FLOAT, false, floatSize * 5, 0);\r\n        this.gl.enableVertexAttribArray(a_position);\r\n        this.gl.vertexAttribPointer(a_color, colorSize, this.gl.FLOAT, false, floatSize * 5, floatSize * 2);\r\n        this.gl.enableVertexAttribArray(a_color);\r\n        this.gl.drawArrays(renderMode, 0, (vector.size / (vertexSize + colorSize) ));\r\n    }\r\n\r\n    private addXYAndColorToVertexBuffer(vertexBuffer: Float32Vector, x: number, y: number)\r\n    {\r\n        vertexBuffer.addArray(new Float32Array([x, y, this._color.red, this._color.green, this._color.blue]));\r\n    }\r\n\r\n    private initShaders(): void\r\n    {\r\n        // load and compile the fragment and vertex shader\r\n        const fragmentShader = this.createShader(this._fragmentShaderSource, \"fragment\");\r\n        const vertexShader = this.createShader(this._vertexShaderSource, \"vertex\");\r\n\r\n        // link them together into a new program\r\n        let shader: WebGLProgram | null = this.gl.createProgram();\r\n        if (shader === null)\r\n        {\r\n            throw Error(\"Could not create shader program\");\r\n        }\r\n        this._shaderProgram = shader;\r\n        this.gl.attachShader(this._shaderProgram, vertexShader);\r\n        this.gl.attachShader(this._shaderProgram, fragmentShader);\r\n        this.gl.linkProgram(this._shaderProgram);\r\n\r\n        if (!this.gl.getProgramParameter(this._shaderProgram, this.gl.LINK_STATUS))\r\n        {\r\n            throw Error(\"Could not initialise shaders\");\r\n        }\r\n\r\n        this.gl.useProgram(this._shaderProgram);\r\n    }\r\n\r\n    private createShader(str, type): WebGLShader | null\r\n    {\r\n        let shader: WebGLShader | null;\r\n        if (type === \"fragment\")\r\n        {\r\n            shader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n        } else if (type === \"vertex\")\r\n        {\r\n            shader = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n        } else\r\n        {\r\n            return null;\r\n        }\r\n\r\n        this.gl.shaderSource(shader, str);\r\n        this.gl.compileShader(shader);\r\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS))\r\n        {\r\n            alert(this.gl.getShaderInfoLog(shader));\r\n            return null;\r\n        }\r\n        return shader;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/webglRenderer.ts","export class ContextWrangler\r\n{\r\n    public static getContext (canvas: HTMLCanvasElement): WebGLRenderingContext\r\n    {\r\n        let gl: WebGLRenderingContext | null;\r\n        try\r\n        {\r\n            gl = canvas.getContext(\"webgl\",\r\n                {\r\n                    alpha: false,\r\n                    antialias: false,\r\n                    depth: false\r\n                });\r\n\r\n        }\r\n        catch (e)\r\n        {\r\n            const msg = `Error creating WebGL Context!: ${e.toString()}`;\r\n            throw Error(msg);\r\n        }\r\n\r\n        if(gl === null)\r\n        {\r\n            const msg = `Error creating WebGL Context!, gl === null`;\r\n            throw Error(msg);\r\n        }\r\n\r\n        return gl;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/contextWrangler.ts","import { IWebGLRenderer, WebGLRenderer } from \"./src/graphics/webglRenderer\";\r\nimport { ContextWrangler } from \"./src/utils/contextWrangler\";\r\nimport { Color, ColorMapper } from \"./src/graphics/colorMapper\";\r\nimport { Point2d } from \"./src/graphics/shapes/point2d\";\r\nimport { Line } from \"./src/graphics/shapes/line\";\r\nimport { Shape } from \"./src/graphics/shapes/shape\";\r\nimport { ShapeFactory } from \"./src/graphics/shapes/shapeFactory\";\r\nimport { ShapeMode } from \"./src/graphics/shapes/shapeMode\";\r\nimport { RenderMode } from \"./src/graphics/renderModeMapper\";\r\nimport { Ellipse } from \"./src/graphics/shapes/ellipse\";\r\nimport { Rectangle } from \"./src/graphics/shapes/rectangle\";\r\nimport { Hexagon } from \"./src/graphics/shapes/hexagon\";\r\nimport { Octogon } from \"./src/graphics/shapes/octogon\";\r\nimport { Triangle } from \"./src/graphics/shapes/triangle\";\r\nimport { RGBColor } from \"./src/graphics/rgbColor\";\r\n\r\nexport\r\n{\r\n    IWebGLRenderer,\r\n    WebGLRenderer,\r\n    ContextWrangler,\r\n    RGBColor,\r\n    Color,\r\n    ColorMapper,\r\n    ShapeMode,\r\n    RenderMode,\r\n    Shape,\r\n    Ellipse,\r\n    Triangle,\r\n    Rectangle,\r\n    Line,\r\n    Hexagon,\r\n    Octogon,\r\n    Point2d,\r\n    ShapeFactory,\r\n}\n\n\n// WEBPACK FOOTER //\n// ./index.ts","export enum DrawingMode\r\n{\r\n    Shapes,\r\n    Verticies\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/drawingMode.ts","export type RenderMode = \"points\" |\r\n                         \"lines\" |\r\n                         \"lineStrip\" |\r\n                         \"lineLoop\" |\r\n                         \"triangles\" |\r\n                         \"triangleStrip\" |\r\n                         \"triangleFan\";\r\n\r\nexport class RenderModeMapper\r\n{\r\n    public static renderModeToWebGlConstant (mode: RenderMode, gl: WebGLRenderingContext): number\r\n    {\r\n        switch (mode) {\r\n            case \"points\":\r\n                return gl.POINTS;\r\n            case \"lines\":\r\n                return gl.LINES;\r\n            case \"lineStrip\":\r\n                return gl.LINE_STRIP;\r\n            case \"lineLoop\":\r\n                return gl.LINE_LOOP;\r\n            case \"triangles\":\r\n                return gl.TRIANGLES;\r\n            case \"triangleStrip\":\r\n                return gl.TRIANGLE_STRIP;\r\n            case \"triangleFan\":\r\n                return gl.TRIANGLE_FAN;\r\n            default: throw Error(`could not find renderMode named ${mode}`);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/renderModeMapper.ts","import { Float32Vector } from \"../utils/vector\";\r\n\r\nexport class VertexBuffer\r\n{\r\n    public renderMode: number;\r\n    public verticies: Float32Vector;\r\n\r\n    constructor(renderMode: number, vertexArray: Float32Array, gl: WebGLRenderingContext)\r\n    {\r\n        if (this.renderModeValidator(renderMode, gl))\r\n        {\r\n            this.renderMode = renderMode;\r\n            this.verticies = new Float32Vector(vertexArray);\r\n        }\r\n        else\r\n        {\r\n            throw Error(\"Cannot initialize vertex buffer of unrecognized gl render mode\");\r\n        }\r\n    }\r\n\r\n    private renderModeValidator(renderMode: number, gl: WebGLRenderingContext): boolean\r\n    {\r\n        switch (renderMode)\r\n        {\r\n            case gl.POINTS:\r\n                return true;\r\n            case gl.LINES:\r\n                return true;\r\n            case gl.LINE_STRIP:\r\n                return true;\r\n            case gl.LINE_LOOP:\r\n                return true;\r\n            case gl.TRIANGLES:\r\n                return true;\r\n            case gl.TRIANGLE_STRIP:\r\n                return true;\r\n            case gl.TRIANGLE_FAN:\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/vertexBuffer.ts"],"sourceRoot":""}