{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap cac0b76a1b550f513b11","webpack:///./src/graphics/colorMapper.ts","webpack:///./src/graphics/drawingMode.ts","webpack:///./src/graphics/renderModeMapper.ts","webpack:///./src/graphics/vertexBuffer.ts","webpack:///./src/graphics/rgbColor.ts","webpack:///./src/graphics/webglRenderer.ts","webpack:///./src/utils/vector.ts"],"names":[],"mappings":"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","file":"webgl-renderer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"webgl-renderer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webgl-renderer\"] = factory();\n\telse\n\t\troot[\"webgl-renderer\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cac0b76a1b550f513b11","import { RGBColor } from \"./rgbColor\";\r\n\r\nexport type Color = \"red\" |\r\n                    \"orange\" |\r\n                    \"yellow\" |\r\n                    \"green\" |\r\n                    \"cyan\" |\r\n                    \"blue\" |\r\n                    \"indigo\" |\r\n                    \"fuchsia\" |\r\n                    \"white\";\r\n\r\nexport class ColorMapper\r\n{\r\n    public static colorToRGBColor (color: Color): RGBColor\r\n    {\r\n        switch (color) {\r\n            case \"red\":\r\n                return new RGBColor(1.0, 0.0, 0.0);\r\n            case \"orange\":\r\n                return new RGBColor(1.0, 0.271, 0.0);\r\n            case \"yellow\":\r\n                return new RGBColor(1.0, 1.0, 0.0);\r\n            case \"green\":\r\n                return new RGBColor(0.0, 1.0, 0.0);\r\n            case \"cyan\":\r\n                return new RGBColor(0.0, 1.0, 1.0);\r\n            case \"blue\":\r\n                return new RGBColor(0.0, 0.0, 1.0);\r\n            case \"indigo\":\r\n                return new RGBColor(0.294, 0.0, 0.510);\r\n            case \"fuchsia\":\r\n                return new RGBColor(1.0, 0.0, 1.0);\r\n            case \"white\":\r\n                return new RGBColor(1.0, 1.0, 1.0);\r\n            default: throw Error(`could not find color ${color}`);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/colorMapper.ts","export enum DrawingMode\r\n{\r\n    Shapes,\r\n    Verticies\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/drawingMode.ts","export type RenderMode = \"points\" |\r\n                         \"lines\" |\r\n                         \"lineStrip\" |\r\n                         \"lineLoop\" |\r\n                         \"triangles\" |\r\n                         \"triangleStrip\" |\r\n                         \"triangleFan\";\r\n\r\nexport class RenderModeMapper\r\n{\r\n    public static renderModeToWebGlConstant (mode: RenderMode, gl: WebGLRenderingContext): number\r\n    {\r\n        switch (mode) {\r\n            case \"points\":\r\n                return gl.POINTS;\r\n            case \"lines\":\r\n                return gl.LINES;\r\n            case \"lineStrip\":\r\n                return gl.LINE_STRIP;\r\n            case \"lineLoop\":\r\n                return gl.LINE_LOOP;\r\n            case \"triangles\":\r\n                return gl.TRIANGLES;\r\n            case \"triangleStrip\":\r\n                return gl.TRIANGLE_STRIP;\r\n            case \"triangleFan\":\r\n                return gl.TRIANGLE_FAN;\r\n            default: throw Error(`could not find renderMode named ${mode}`);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/renderModeMapper.ts","import { Float32Vector } from \"../utils/vector\";\r\n\r\nexport class VertexBuffer\r\n{\r\n    public renderMode: number;\r\n    public verticies: Float32Vector;\r\n\r\n    constructor(renderMode: number, vertexArray: Float32Array, gl: WebGLRenderingContext)\r\n    {\r\n        if (this.renderModeValidator(renderMode, gl))\r\n        {\r\n            this.renderMode = renderMode;\r\n            this.verticies = new Float32Vector(vertexArray);\r\n        }\r\n        else\r\n        {\r\n            throw Error(\"Cannot initialize vertex buffer of unrecognized gl render mode\");\r\n        }\r\n    }\r\n\r\n    private renderModeValidator(renderMode: number, gl: WebGLRenderingContext): boolean\r\n    {\r\n        switch (renderMode)\r\n        {\r\n            case gl.POINTS:\r\n                return true;\r\n            case gl.LINES:\r\n                return true;\r\n            case gl.LINE_STRIP:\r\n                return true;\r\n            case gl.LINE_LOOP:\r\n                return true;\r\n            case gl.TRIANGLES:\r\n                return true;\r\n            case gl.TRIANGLE_STRIP:\r\n                return true;\r\n            case gl.TRIANGLE_FAN:\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/vertexBuffer.ts","export class RGBColor\r\n{\r\n    public red: number;\r\n    public green: number;\r\n    public blue: number;\r\n\r\n    constructor(red: number, green: number, blue: number)\r\n    {\r\n        this.red = red;\r\n        this.green = green;\r\n        this.blue = blue;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/rgbColor.ts","import { Shape } from \"./shapes/shape\";\r\nimport { Float32Vector } from \"../utils/vector\";\r\nimport { RenderMode, RenderModeMapper } from \"./renderModeMapper\";\r\nimport { VertexBuffer } from \"./vertexBuffer\";\r\nimport { DrawingMode } from \"./drawingMode\";\r\nimport { ShapeMode } from \"./shapes/shapeMode\";\r\nimport { Color, ColorMapper } from \"./colorMapper\";\r\nimport { RGBColor } from \"./rgbColor\";\r\n\r\nexport interface IWebGLRenderer\r\n{\r\n    gl: WebGLRenderingContext;\r\n    color: Color;\r\n    shape: ShapeMode;\r\n    renderMode: RenderMode;\r\n    getRGBColor: () => RGBColor;\r\n    draw: () => void;\r\n    setViewPortDimensions: (newWidth: number, newHeight: number) => void;\r\n    addXYPointToScene(x: number, y: number): void;\r\n    addShapeToScene(shape: Shape): void;\r\n}\r\n\r\nexport class WebGLRenderer implements IWebGLRenderer\r\n{\r\n    public gl: WebGLRenderingContext;\r\n    private glRenderMode: number;\r\n    private shapeMode: ShapeMode;\r\n    private renderModeStr: RenderMode;\r\n    private drawingMode: DrawingMode;\r\n    private colorStr: Color;\r\n    private rgbColor: RGBColor;\r\n    private vertexShaderSource: string =\r\n    \"    attribute vec3 a_position;\\n\" +\r\n    \"    attribute float a_pointSize;\\n\" +\r\n    \"    attribute vec4 a_color;\\n\" +\r\n    \"    varying vec4 v_color;\\n\" +\r\n    \"    void main(void) {\\n\" +\r\n    \"        gl_Position = vec4(a_position, 1.0);\\n\" +\r\n    \"        gl_PointSize = 10.0;\\n\" +\r\n    \"        v_color = a_color;\\n\" +\r\n    \"    }\\n\";\r\n\r\n    private fragmentShaderSource: string =\r\n    \"    precision mediump float;\\n\" +\r\n    \"    uniform vec4 u_fragColor;\" +\r\n    \"    varying vec4 v_color;\\n\" +\r\n    \"    void main(void) {\\n\" +\r\n    \"        gl_FragColor = v_color;\\n\" +\r\n    \"    }\\n\";\r\n\r\n    private shaderProgram: WebGLShader;\r\n    private pointsVector: VertexBuffer;\r\n    private linesVector: VertexBuffer;\r\n    private lineStripVector: VertexBuffer;\r\n    private lineLoopVector: VertexBuffer;\r\n    private trianglesVector: VertexBuffer;\r\n    private triangleStripVector: VertexBuffer;\r\n    private triangleFanVector: VertexBuffer;\r\n    private vertexBuffers: Array<VertexBuffer>;\r\n    private shapeScene: Array<Shape>;\r\n\r\n    constructor(canvasWidth: number, canvasHeight: number, gl: WebGLRenderingContext)\r\n    {\r\n        this.gl = gl;\r\n        this.glRenderMode = this.gl.POINTS;\r\n        this.shapeMode = \"points\";\r\n        this.drawingMode = DrawingMode.Verticies;\r\n        this.setViewPortDimensions(canvasWidth, canvasHeight);\r\n        this.initShaders();\r\n        this.pointsVector = new VertexBuffer(this.gl.POINTS, new Float32Array(0), this.gl);\r\n        this.linesVector = new VertexBuffer(this.gl.LINES, new Float32Array(0), this.gl);\r\n        this.lineStripVector = new VertexBuffer(this.gl.LINE_STRIP, new Float32Array(0), this.gl);\r\n        this.lineLoopVector = new VertexBuffer(this.gl.LINE_LOOP, new Float32Array(0), this.gl);\r\n        this.trianglesVector = new VertexBuffer(this.gl.TRIANGLES, new Float32Array(0), this.gl);\r\n        this.triangleStripVector = new VertexBuffer(this.gl.TRIANGLE_STRIP, new Float32Array(0), this.gl);\r\n        this.triangleFanVector = new VertexBuffer(this.gl.TRIANGLE_FAN, new Float32Array(0), this.gl);\r\n        this.vertexBuffers = [\r\n            this.pointsVector,\r\n            this.linesVector,\r\n            this.lineStripVector,\r\n            this.lineLoopVector,\r\n            this.trianglesVector,\r\n            this.triangleStripVector,\r\n            this.triangleFanVector];\r\n        this.shapeScene = [];\r\n    }\r\n\r\n    public setViewPortDimensions(newWidth: number, newHeight: number): void\r\n    {\r\n        this.gl.viewport(0, 0, newWidth, newHeight);\r\n    }\r\n\r\n    public get renderMode(): RenderMode\r\n    {\r\n        return this.renderModeStr;\r\n    }\r\n\r\n    public set renderMode(renderMode: RenderMode)\r\n    {\r\n        this.drawingMode = DrawingMode.Verticies;\r\n        this.renderModeStr = renderMode;\r\n        this.glRenderMode = RenderModeMapper.renderModeToWebGlConstant(renderMode, this.gl);\r\n    }\r\n\r\n    public get shape(): ShapeMode\r\n    {\r\n        return this.shapeMode;\r\n    }\r\n\r\n    public set shape(newShapeMode: ShapeMode)\r\n    {\r\n        this.drawingMode = DrawingMode.Shapes;\r\n        this.shapeMode = newShapeMode;\r\n    }\r\n\r\n    public get color(): Color\r\n    {\r\n        return this.colorStr;\r\n    }\r\n\r\n    public set color(color: Color)\r\n    {\r\n        this.colorStr = color;\r\n        this.rgbColor = ColorMapper.colorToRGBColor(color);\r\n    }\r\n\r\n    public getRGBColor(): RGBColor\r\n    {\r\n        return this.rgbColor;\r\n    }\r\n\r\n    public addXYPointToScene(x: number, y: number): void\r\n    {\r\n        if (this.drawingMode !== DrawingMode.Verticies) { return; }\r\n\r\n        switch (this.glRenderMode)\r\n        {\r\n            case this.gl.POINTS:\r\n                this.addXYAndColorToVertexBuffer(this.pointsVector.verticies, x, y);\r\n                break;\r\n            case this.gl.LINES:\r\n                this.addXYAndColorToVertexBuffer(this.linesVector.verticies, x, y);\r\n                break;\r\n            case this.gl.LINE_STRIP:\r\n                this.addXYAndColorToVertexBuffer(this.lineStripVector.verticies, x, y);\r\n                break;\r\n            case this.gl.LINE_LOOP:\r\n                this.addXYAndColorToVertexBuffer(this.lineLoopVector.verticies, x, y);\r\n                break;\r\n            case this.gl.TRIANGLES:\r\n                this.addXYAndColorToVertexBuffer(this.trianglesVector.verticies, x, y);\r\n                break;\r\n            case this.gl.TRIANGLE_STRIP:\r\n                this.addXYAndColorToVertexBuffer(this.triangleStripVector.verticies, x, y);\r\n                break;\r\n            case this.gl.TRIANGLE_FAN:\r\n                this.addXYAndColorToVertexBuffer(this.triangleFanVector.verticies, x, y);\r\n                break;\r\n        }\r\n    }\r\n\r\n    public addShapeToScene(shape: Shape): void\r\n    {\r\n        this.shapeScene.push(shape);\r\n    }\r\n\r\n    public draw()\r\n    {\r\n        this.gl.clearColor(0.09, 0.09, 0.09, 1.0);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        for (let vb of this.vertexBuffers)\r\n        {\r\n            if (vb.verticies.size > 0)\r\n            {\r\n                this.drawGlArray(vb.verticies, vb.renderMode);\r\n            }\r\n        }\r\n\r\n        if (this.shapeScene.length > 0)\r\n        {\r\n            for (let shape of this.shapeScene)\r\n            {\r\n                this.drawGlArray(shape.verticies, shape.glRenderMode, shape.vertexSize, shape.colorSize);\r\n            }\r\n        }\r\n    }\r\n\r\n    // by default vertexSize = 2 because we use two floats per vertex...only rendering 2d for now\r\n    // colorSize = 3 because we use three floats to represent R, G, and B\r\n    private drawGlArray(vector: Float32Vector, renderMode: number, vertexSize: number = 2, colorSize: number = 3): void\r\n    {\r\n        let a_position = this.gl.getAttribLocation(this.shaderProgram, \"a_position\");\r\n        let a_color = this.gl.getAttribLocation(this.shaderProgram, \"a_color\");\r\n\r\n        const floatSize = vector.arr.BYTES_PER_ELEMENT;\r\n\r\n        let vertexBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vertexBuffer);\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vector.arr, this.gl.STATIC_DRAW);\r\n        this.gl.vertexAttribPointer(a_position, vertexSize, this.gl.FLOAT, false, floatSize * 5, 0);\r\n        this.gl.enableVertexAttribArray(a_position);\r\n        this.gl.vertexAttribPointer(a_color, colorSize, this.gl.FLOAT, false, floatSize * 5, floatSize * 2);\r\n        this.gl.enableVertexAttribArray(a_color);\r\n        this.gl.drawArrays(renderMode, 0, (vector.size / (vertexSize + colorSize) ));\r\n    }\r\n\r\n    private addXYAndColorToVertexBuffer(vertexBuffer: Float32Vector, x: number, y: number)\r\n    {\r\n        vertexBuffer.addArray(new Float32Array([x, y, this.rgbColor.red, this.rgbColor.green, this.rgbColor.blue]));\r\n    }\r\n\r\n    private initShaders(): void\r\n    {\r\n        // load and compile the fragment and vertex shader\r\n        const fragmentShader = this.createShader(this.fragmentShaderSource, \"fragment\");\r\n        const vertexShader = this.createShader(this.vertexShaderSource, \"vertex\");\r\n\r\n        // link them together into a new program\r\n        let shader: WebGLProgram | null = this.gl.createProgram();\r\n        if (shader === null)\r\n        {\r\n            throw Error(\"Could not create shader program\");\r\n        }\r\n        this.shaderProgram = shader;\r\n        this.gl.attachShader(this.shaderProgram, vertexShader);\r\n        this.gl.attachShader(this.shaderProgram, fragmentShader);\r\n        this.gl.linkProgram(this.shaderProgram);\r\n\r\n        if (!this.gl.getProgramParameter(this.shaderProgram, this.gl.LINK_STATUS))\r\n        {\r\n            throw Error(\"Could not initialise shaders\");\r\n        }\r\n\r\n        this.gl.useProgram(this.shaderProgram);\r\n    }\r\n\r\n    private createShader(str, type): WebGLShader | null\r\n    {\r\n        let shader: WebGLShader | null;\r\n        if (type === \"fragment\")\r\n        {\r\n            shader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n        } else if (type === \"vertex\")\r\n        {\r\n            shader = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n        } else\r\n        {\r\n            return null;\r\n        }\r\n\r\n        this.gl.shaderSource(shader, str);\r\n        this.gl.compileShader(shader);\r\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS))\r\n        {\r\n            alert(this.gl.getShaderInfoLog(shader));\r\n            return null;\r\n        }\r\n        return shader;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/webglRenderer.ts","export class Float32Vector\r\n{\r\n    public arr: Float32Array;\r\n    public size: number;\r\n\r\n    constructor(arr: Float32Array)\r\n    {\r\n        this.arr = arr;\r\n        this.size = arr.length;\r\n    }\r\n\r\n    public addNumber(number: number)\r\n    {\r\n        const newSize = this.size + 1;\r\n        if (newSize >= this.arr.length)\r\n        {\r\n            let oldArr = this.arr;\r\n            this.arr = new Float32Array(newSize * 2);\r\n            this.arr.set(oldArr);\r\n        }\r\n        this.arr[this.size] = number;\r\n        this.size = newSize;\r\n    }\r\n\r\n    public addArray(arr: Float32Array | Array<number>)\r\n    {\r\n        let newSize = this.size + arr.length;\r\n        if (newSize >= this.arr.length)\r\n        {\r\n            let oldArr = this.arr;\r\n            this.arr = new Float32Array(newSize * 2);\r\n            this.arr.set(oldArr);\r\n        }\r\n        this.arr.set(arr, this.size);\r\n        this.size = newSize;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/vector.ts"],"sourceRoot":""}